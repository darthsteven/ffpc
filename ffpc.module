<?php

/**
 * Implements hook_views_api().
 */
function ffpc_views_api() {
  return array(
    'api' => 2,
  );
}

/**
 * Implements hook_preprocess_ffpc_view_podcast_feed().
 */
function template_preprocess_ffpc_view_podcast_feed(&$vars) {
  global $base_url;
  global $language;

  $view     = &$vars['view'];
  $options  = &$vars['options'];
  $items    = &$vars['rows'];
  $style    = &$view->style_plugin;

  if (!empty($options['mission_description'])) {
    $description = variable_get('site_mission', '');
  }
  else {
    $description = $options['description'];
  }

  if ($view->display_handler->get_option('sitename_title')) {
    $title = variable_get('site_name', 'Drupal');
    if ($slogan = variable_get('site_slogan', '')) {
      $title .= ' - ' . $slogan;
    }
  }
  else {
    $title = $view->get_title();
  }

  // Figure out which display which has a path we're using for this feed. If there isn't
  // one, use the global $base_url
  $link_display_id = $view->display_handler->get_link_display();
  if ($link_display_id && !empty($view->display[$link_display_id])) {
    $path = $view->display[$link_display_id]->handler->get_path();
  }

  if ($path) {
    $path = $view->get_url(NULL, $path);
    $url_options = array('absolute' => TRUE);
    if (!empty($view->exposed_raw_input)) {
      $url_options['query'] = $view->exposed_raw_input;
    }

    // Compare the link to the default home page; if it's the default home page, just use $base_url.
    if ($path == variable_get('site_frontpage', 'node')) {
      $path = '';
    }

    $vars['link'] = check_url(url($path, $url_options));
  }

  // This is where we add additional elements to the podcast.
  $args = array();
  if (!empty($options['copyright'])) {
    $args['copyright'] = $options['copyright'];
  }
  if (!empty($options['itunes-image'])) {
    $args['itunes:image'] = $options['itunes-image'];
  }
  if (!empty($options['itunes-explicit'])) {
    $args['itunes:explicit'] = $options['itunes-explicit'];
  }
  if (!empty($options['itunes-owner-name'])) {
    $args['itunes:owner']['itunes:name'] = $options['itunes-owner-name'];
  }
  if (!empty($options['itunes-owner-email'])) {
    $args['itunes:owner']['itunes:email'] = $options['itunes-owner-email'];
  }
  if (!empty($options['itunes-subtitle'])) {
    $args['itunes:subtitle'] = $options['itunes-subtitle'];
  }
  if (!empty($options['itunes-author'])) {
    $args['itunes:author'] = $options['itunes-author'];
  }
  if (!empty($options['itunes-summary'])) {
    $args['itunes:summary'] = $options['itunes-summary'];
  }
  
  
  
  
  $vars['namespaces'] = drupal_attributes($style->namespaces);
  $vars['channel'] = format_rss_channel($title, $vars['link'], $description, $items, $language->language, $args);

  //drupal_add_http_header('Content-Type', 'application/rss+xml');
}

/**
 * Implements hook_node_view().
 */
function ffpc_node_view($node, $view_mode, $langcode) {
  // If the view mode is RSS, lets go looking for ID3 tags to add.
  if ($view_mode == 'rss') {
    if (!getid3_load(TRUE)) {
      return NULL;
    }
    
    $fields = drupal_static(__FUNCTION__);
    $type = 'node';
    // Find the meta tag fields to iterate over.
    if (!isset($fields[$type])) {
      $fields[$type] = array();
      $bundles = field_info_instances($type);
      foreach ($bundles as $bundle => $bundle_field_instances) {
        foreach ($bundle_field_instances as $field_name => $field) {
          $info = field_info_field_by_id($field['field_id']);
          if ($info['type'] == 'file') {
            $fields[$type][] = $field_name;
          }
        }
      }
    }
    $getid3 = new getID3;
    
    foreach ($fields[$type] as $key) {
      if ($items = field_get_items($type, $node, $key, $langcode)) {
        foreach ($items as $item) {
          $id3_info = $getid3->analyze(drupal_realpath($item['uri']));
          if (!isset($id3_info['error'])) {
            $node->rss_namespaces['xmlns:itunes'] = 'http://www.itunes.com/dtds/podcast-1.0.dtd';
            $node->rss_elements[] = array(
              'key' => 'enclosure',
              'attributes'  =>  array(
                'url' => file_create_url($item['uri']),
                'length' => $item['filesize'],
                'type' => $item['filemime'],
              ),
            );
                      
            if (!empty($id3_info['playtime_string'])) {
              $node->rss_elements[] = array(
                'key' => 'itunes:duration',
                'value' => $id3_info['playtime_string'],
              );
            }
            if (!empty($id3_info['tags']['id3v2']['artist'][0])) {
              $node->rss_elements[] = array(
                'key' => 'itunes:author',
                'value' => $id3_info['tags']['id3v2']['artist'][0],
              );
            }
  
            //$file_extra[] = array(
            //  'key' => 'itunes:subtitle',
            //  'value' => str_replace('&amp;', '&', $item_subtitle),
            //);
            //$file_extra[] = array(
            //  'key' => 'itunes:summary',
            //  'value' => str_replace('&amp;', '&', $stripped_item_text),
            //);
            
            // Only consider the first successful file.
            break 2;
          }
        }
      }
    }
    
    unset($getid3);
    
    
  }
}
